{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","findTab","find","tab","id","className","map","title","isActive","classNames","href","onClick","handleClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAO/CC,EAAUH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAE5C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MACNC,EAAWR,IAAkBI,EAEnC,OACE,oBACE,UAAQ,MAERC,UAAWI,IAAW,CAAE,YAAaD,IAHvC,SAKE,mBACEE,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,kBAzBL,SAACR,GACfA,EAAIC,KAAOJ,GACbD,EAAcI,GAuBaS,CAAYT,IAH7B,SAKGI,KAREH,UAgBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,0BACMJ,QADN,IACMA,OADN,EACMA,EAASY,eCvCRf,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,gBAG7BC,EAAU,WAAO,IAAD,EAOVV,EANjB,EAA0CW,mBAAiBjB,EAAK,GAAGM,IAAnE,mBAAOJ,EAAP,KAAsBgB,EAAtB,KAUA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2CANaD,EAOiBJ,EAD9B,EALFF,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOA,MAAO,YAKjC,aACsB,EAAwBG,SAE9C,cAAC,EAAD,CACET,KAAMA,EACNC,cAfqB,SAACI,GAC1Ba,EAAiBb,EAAIC,KAejBJ,cAAeA,QC9BvBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5abfbd78.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: FC<Props> = ({ tabs, onTabSelected, selectedTabId }) => {\n  const handleClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const findTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n            const isActive = selectedTabId === id;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={id}\n                className={classNames({ 'is-active': isActive })}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {`${findTab?.content}`}\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n\n  const handleSelectedItem = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const findTab = (id: string): Tab | null => (\n    tabs.find(tab => tab.id === id) || null\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${findTab(selectedTabId)?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={handleSelectedItem}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}